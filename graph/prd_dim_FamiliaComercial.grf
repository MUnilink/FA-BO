<?xml version="1.0" encoding="UTF-8"?><Graph author="diego.guedes" created="Fri May 11 07:47:44 CDT 2018" guiVersion="3.4.4.P" id="1526048085478" licenseType="Commercial" modified="Mon May 11 08:31:49 CDT 2020" modifiedBy="diego.guedes" name="prd_dim_FamiliaComercial" revision="1.11" showComponentDetails="true">
<Global>
<Metadata id="Metadata5" previewAttachment="${DATA_SOURCE_DIR}/TOTVSANALYTICS/FamiliaComercial.csv" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," name="FamiliaComercial_Input" previewAttachmentCharset="ISO-8859-1" quoteChar="&quot;" quotedStrings="true" recordDelimiter="\n" skipSourceRows="1" type="delimited">
<Field name="FILIAL_COD_FAMILIA_COMERCIAL" type="string"/>
<Field name="COD_FAMILIA_COMERCIAL" type="string"/>
<Field eofAsDelimiter="false" name="DESC_FAMILIA_COMERCIAL" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachment="${DATA_SOURCE_DIR}/TOTVSANALYTICS/FamiliaComercial.csv" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="," name="FamiliaComercial_Output" previewAttachmentCharset="ISO-8859-1" quoteChar="&quot;" quotedStrings="true" recordDelimiter="\n" skipSourceRows="1" type="delimited">
<Field name="FILIAL_COD_FAMILIA_COMERCIAL" type="string"/>
<Field name="COD_FAMILIA_COMERCIAL" type="string"/>
<Field eofAsDelimiter="false" name="DESC_FAMILIA_COMERCIAL" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Sequence cached="8" id="Sequence0" name="SequenciaHom" start="1" step="1" type="PRIMITIVE_SEQUENCE"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" enabled="true" folded="false" height="150" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="1. CARGA DO DATASET DE FAMÍLIA COMERCIAL (DIM)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="580" x="11" y="16"/>
<Dictionary/>
</Global>
<Phase number="10">
<Node charset="ISO-8859-1" enabled="enabled" fileURL="zip:(${DATA_SOURCE_DIR}/${gdc_agent_zip})#FamiliaComercial.csv*" guiName="FamiliaComercial" guiX="24" guiY="55" id="FAMILIA_COMERCIAL" type="DATA_READER"/>
<Node dataset="dataset.familiacomercial" datasetFieldMappings="{&quot;gd_dataset&quot;:{&quot;datasetId&quot;:&quot;dataset.familiacomercial&quot;,&quot;datasetTitle&quot;:&quot;Família Comercial&quot;,&quot;attributes&quot;:[{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.familiacomercial.codigodafamiliacomercial&quot;,&quot;title&quot;:&quot;Código da Família Comercial&quot;,&quot;prettyId&quot;:&quot;attr_familiacomercial_codigodafamiliacomercial&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.familiacomercial.codigodafamiliacomercial&quot;,&quot;title&quot;:&quot;Código da Família Comercial&quot;,&quot;prettyId&quot;:&quot;codigodafamiliacomercial&quot;,&quot;assignedMetadataField&quot;:&quot;COD_FAMILIA_COMERCIAL&quot;,&quot;type&quot;:&quot;STRING&quot;,&quot;referenceKey&quot;:true}}],&quot;assignedMetadataField&quot;:null,&quot;selectedDisplayForm&quot;:null}},{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.familiacomercial.familiacomercial&quot;,&quot;title&quot;:&quot;Família Comercial&quot;,&quot;prettyId&quot;:&quot;attr_familiacomercial_familiacomercial&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.familiacomercial.familiacomercial&quot;,&quot;title&quot;:&quot;Família Comercial&quot;,&quot;prettyId&quot;:&quot;familiacomercial&quot;,&quot;assignedMetadataField&quot;:&quot;DESC_FAMILIA_COMERCIAL&quot;,&quot;type&quot;:&quot;STRING&quot;,&quot;referenceKey&quot;:true}}],&quot;assignedMetadataField&quot;:null,&quot;selectedDisplayForm&quot;:null}},{&quot;gd_dataset_attribute&quot;:{&quot;id&quot;:&quot;attr.familiacomercial.idfamiliacomercial&quot;,&quot;title&quot;:&quot;ID Família Comercial&quot;,&quot;prettyId&quot;:&quot;attr_familiacomercial_idfamiliacomercial&quot;,&quot;displayForms&quot;:[{&quot;gd_dataset_attribute_display_form&quot;:{&quot;id&quot;:&quot;label.familiacomercial.idfamiliacomercial&quot;,&quot;title&quot;:&quot;ID Família Comercial&quot;,&quot;prettyId&quot;:&quot;idfamiliacomercial&quot;,&quot;assignedMetadataField&quot;:&quot;FILIAL_COD_FAMILIA_COMERCIAL&quot;,&quot;type&quot;:&quot;STRING&quot;,&quot;referenceKey&quot;:true}}],&quot;assignedMetadataField&quot;:null,&quot;selectedDisplayForm&quot;:null}}],&quot;referencedAttributes&quot;:[],&quot;dateAttributes&quot;:[],&quot;simpleFacts&quot;:[],&quot;dateFacts&quot;:[],&quot;entitiesWithoutMetadata&quot;:[],&quot;unassigneddateFacts&quot;:[],&quot;entitiesWithoutValue&quot;:[],&quot;fieldsWithMetadataConflict&quot;:[],&quot;datesWithFactConflict&quot;:[]}}" enabled="enabled" guiName="Família Comercial" guiX="449" guiY="55" id="FAMILIA_COMERCIAL1" mode="${LOAD_MODE_DIM}" retriesInterval="60" retriesNumber="5" type="GD_DATASET_WRITER"/>
<Node enabled="disabled" guiName="Trash" guiX="307" guiY="55" id="TRASH" type="TRASH"/>
<Node enabled="enabled" guiName="Treatment" guiX="168" guiY="55" id="TREATMENT" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
import "trans/lib.ctl";

// Transforms input record into output record.
function integer transform() {
	if (GOODDATA_DEMO_MODE == 'S') sequence(SequenciaHom).next();
	
	$out.0.FILIAL_COD_FAMILIA_COMERCIAL = $in.0.FILIAL_COD_FAMILIA_COMERCIAL;
	$out.0.COD_FAMILIA_COMERCIAL = $in.0.COD_FAMILIA_COMERCIAL;
	
	$out.0.DESC_FAMILIA_COMERCIAL = formatString($in.0.DESC_FAMILIA_COMERCIAL, 'FAM. COM. ' + (1 + sequence(SequenciaHom).current()));
		
	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="FAMILIA_COMERCIAL:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata5" outPort="Port 0 (output)" toNode="TREATMENT:0"/>
<Edge fromNode="TREATMENT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="FAMILIA_COMERCIAL1:0"/>
</Phase>
</Graph>
